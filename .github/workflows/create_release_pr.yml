name: Create release PR

run-name: Create release PR for new ${{ github.event.inputs.version }} version

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: choice
        description: 'What type of release is this'
        options:
          - 'major'
          - 'minor'
          - 'patch'

jobs:
  create-release-pr:
    name: Create release PR
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      new_version: ''
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Setup Go 1.23.x
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.x'
          cache-dependency-path: ${{ github.workspace }}/go.sum
      - name: Check for Changes to the Changelog
        id: diff
        if: false
        run: |
          NEW_VERSION=$(./.github/scripts/increment_version.sh -t ${{ inputs.version }} -f VERSION_FILE)
          LAST_CHANGELOG_VERSION=$(./.github/scripts/get_latest_changelog_version.sh)
          if [ "$NEW_VERSION" != "$LAST_CHANGELOG_VERSION" ]; then
            echo "Changelog not updated for version $NEW_VERSION lastest version is $LAST_CHANGELOG_VERSION"
            exit 1
          fi
      - name: Bump version and push
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          git config --global user.email "cjlapao@gmail.com"
          git config --global user.name "cjlapao"

          NEW_VERSION=$(./.github/scripts/increment_version.sh -t ${{ inputs.version }} -f VERSION_FILE)
          echo "$NEW_VERSION" > ./VERSION_FILE

          git checkout -b release/"$NEW_VERSION"

          # Generate changelog for the new version
          ./.github/scripts/generate_changelog.sh --repo ${{ github.repository }} --version $NEW_VERSION

          git add VERSION_FILE CHANGELOG.md
          git commit -m "Release extension version $NEW_VERSION"

          git push --set-upstream origin release/$NEW_VERSION

          echo "new_version=$NEW_VERSION" >> "$GITHUB_ENV"

      - name: Create PR
        run: |
          ./.github/scripts/generate_changelog.sh --mode RELEASE --repo ${{ github.repository }} --version ${{ env.new_version }} --output-to-file 
          gh pr create \
            --title "Release version ${{ env.new_version }}" \
            --body-file release_notes.md \
            --base main \
            --head release/${{ env.new_version }}
          gh pr edit --add-label release-request
        env:
          GH_TOKEN: ${{ secrets.PAT }}
