name: PR Builder

on:
  pull_request:
    branches: [main, owner_review]
    types: [opened, synchronize, reopened, edited]

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    name: PR Build and Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: ['go']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23

      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: |
          go get .

      - name: Build
        run: go build -v ./...

      - name: Test
        run: |
          go install github.com/axw/gocov/gocov@latest
          go install github.com/AlekSi/gocov-xml@latest
          go install github.com/matm/gocov-html/cmd/gocov-html@latest

          go test -coverprofile coverage.txt -covermode count -v ./...
          gocov convert coverage.txt | gocov-xml > cobertura-coverage.xml

      - name: Upload Code Coverage
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: ${{ github.workspace }}/cobertura-coverage.xml

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: cobertura-coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '40 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt sarif -out results.sarif ./...'

      - name: Upload SARIF file
        if: false
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
